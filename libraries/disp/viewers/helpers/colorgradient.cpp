//=============================================================================================================
// INCLUDES
//=============================================================================================================

#include "colorgradient.h"

#include <algorithm>

//=============================================================================================================
// QT INCLUDES
//=============================================================================================================

//=============================================================================================================
// USED NAMESPACES
//=============================================================================================================

using namespace DISPLIB;

//=============================================================================================================
// DEFINE MEMBER METHODS
//=============================================================================================================

ColorGradient::ColorGradient()
{

}

//=============================================================================================================

void ColorGradient::getColor(int value,
                             int &r,
                             int &g,
                             int &b)
{
    if(!m_vecColors.size()){
        return;
    }

    for (int i = 0; i< m_vecColors.size(); i++){
        ColorPoint& currentColor = m_vecColors[i];
        if(value < currentColor.val){
            ColorPoint& prevColor = m_vecColors[std::max(0, i - 1)];
        }
    }
}
